<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>